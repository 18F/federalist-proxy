worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  charset utf-8;
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;

  sendfile on;

  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gunzip on;
  gzip_static always;
  gzip_types text/plain text/css text/js text/xml
    text/javascript application/javascript application/x-javascript
    application/json application/xml application/xml+rss
    font/ttf font/otf font/x-woff image/svg+xml
    application/vnd.ms-fontobject
    application/ttf application/x-ttf application/otf
    application/x-otf application/truetype application/eot
    application/opentype application/x-opentype application/woff
    application/font application/font-woff woff application/font-sfnt;

  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
  server_tokens off;

  server {
    listen <%= ENV["PORT"] %>;
    server_name <%= ENV["FEDERALIST_PROXY_SERVER_NAME"] %>;
    add_header Strict-Transport-Security "max-age=31536000";
    add_header X-Frame-Options "SAMEORIGIN";

    location =/robots.txt {
      alias <%= ENV["APP_ROOT"] %>/public/robots.txt;
    }

    location / {
      # Specify the Content-Type header as "text/html" for requests that look
      # like they are for files with specific extensions. This is primarily to
      # allow for HTML "meta redirects" on pages of sites that have been migrated
      # to Federalist. For context, see https://github.com/18F/federalist-proxy/issues/19.
      #
      # More extensions can be added inside the parentheses, separated
      # by | characters, e.g. `\.(cfm|php)$`.
      location ~* \.(cfm)$ {
        add_header Content-Type "text/html";
        # Notice there is no trailing slash on the proxy_pass url here.
        proxy_pass <%= ENV["FEDERALIST_S3_BUCKET_URL"] %>;
      }

      # Enable CORS support.
      # Based on https://enable-cors.org/server_nginx.html
      set $cors_origins 'https://s.codepen.io';
      set $cors_methods 'GET, OPTIONS';
      set $cors_headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_origins;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
  
        # Custom headers and headers various browsers *should* be OK with but aren't
        add_header 'Access-Control-Allow-Headers' $cors_headers;
      }
      if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' $cors_origins;
        add_header 'Access-Control-Allow-Methods' $cors_methods;

        # Custom headers and headers various browsers *should* be OK with but aren't
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        add_header 'Access-Control-Expose-Headers' $cors_headers;
      }

      proxy_pass <%= ENV["FEDERALIST_S3_BUCKET_URL"] %>/;
    }
  }
}
